<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5449932" started-at="2020-06-11T05:21:12Z" finished-at="2020-06-11T06:52:02Z">
    <groups>
      <group name="NextPayDate">
        <method signature="QCStore.Payfrequency_Biweekly()[pri:0, instance:tests.QCStore@6536e911]" name="Payfrequency_Biweekly" class="tests.QCStore"/>
        <method signature="QCStore.Payfrequency_Monthly()[pri:2, instance:tests.QCStore@6536e911]" name="Payfrequency_Monthly" class="tests.QCStore"/>
        <method signature="QCStore.Payfrequency_Semi_monthly()[pri:3, instance:tests.QCStore@6536e911]" name="Payfrequency_Semi_monthly" class="tests.QCStore"/>
        <method signature="QCStore.Payfrequency_Weekly()[pri:1, instance:tests.QCStore@6536e911]" name="Payfrequency_Weekly" class="tests.QCStore"/>
      </group> <!-- NextPayDate -->
    </groups>
    <test name="Test" duration-ms="5449932" started-at="2020-06-11T05:21:12Z" finished-at="2020-06-11T06:52:02Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@6536e911]" name="setup" is-config="true" duration-ms="76" started-at="2020-06-11T05:21:12Z" finished-at="2020-06-11T05:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@6536e911]" name="killProcess" is-config="true" duration-ms="5010" started-at="2020-06-11T05:21:12Z" finished-at="2020-06-11T05:21:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="Payfrequency_Biweekly()[pri:0, instance:tests.QCStore@6536e911]" name="Payfrequency_Biweekly" duration-ms="1370767" started-at="2020-06-11T05:21:17Z" finished-at="2020-06-11T05:44:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Payfrequency_Biweekly -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@6536e911]" name="getResult" is-config="true" duration-ms="170" started-at="2020-06-11T05:44:08Z" finished-at="2020-06-11T05:44:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Payfrequency_Biweekly status=SUCCESS method=QCStore.Payfrequency_Biweekly()[pri:0, instance:tests.QCStore@6536e911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@6536e911]" name="killProcess" is-config="true" duration-ms="5010" started-at="2020-06-11T05:44:08Z" finished-at="2020-06-11T05:44:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="Payfrequency_Weekly()[pri:1, instance:tests.QCStore@6536e911]" name="Payfrequency_Weekly" duration-ms="1232417" started-at="2020-06-11T05:44:13Z" finished-at="2020-06-11T06:04:46Z">
          <exception class="java.lang.StringIndexOutOfBoundsException">
            <message>
              <![CDATA[String index out of range: 250]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.StringIndexOutOfBoundsException: String index out of range: 250
at java.lang.String.substring(Unknown Source)
at tests.Frequency_Weekly.borrowerRegistration(Frequency_Weekly.java:392)
at tests.QCStore.Payfrequency_Weekly(QCStore.java:271)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.StringIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Payfrequency_Weekly -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@6536e911]" name="getResult" is-config="true" duration-ms="786" started-at="2020-06-11T06:04:46Z" finished-at="2020-06-11T06:04:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Payfrequency_Weekly status=FAILURE method=QCStore.Payfrequency_Weekly()[pri:1, instance:tests.QCStore@6536e911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@6536e911]" name="killProcess" is-config="true" duration-ms="5015" started-at="2020-06-11T06:04:47Z" finished-at="2020-06-11T06:04:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="Payfrequency_Monthly()[pri:2, instance:tests.QCStore@6536e911]" name="Payfrequency_Monthly" duration-ms="1525099" started-at="2020-06-11T06:04:52Z" finished-at="2020-06-11T06:30:17Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Failed to navigate to https://qclocalauto.qfund.net/cc/adminIndex.do. This usually means that a call to the COM method IWebBrowser2::Navigate2() failed. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS0-223', ip: '192.168.0.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:25260/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: dfb79fe4-7349-4e35-b804-ec802eaea683]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Failed to navigate to https://qclocalauto.qfund.net/cc/adminIndex.do. This usually means that a call to the COM method IWebBrowser2::Navigate2() failed. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS0-223', ip: '192.168.0.223', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:25260/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: dfb79fe4-7349-4e35-b804-ec802eaea683
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:276)
at tests.QCCSRLoginLogout.adminLogin(QCCSRLoginLogout.java:206)
at tests.QCStore.Payfrequency_Monthly(QCStore.java:300)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Payfrequency_Monthly -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@6536e911]" name="getResult" is-config="true" duration-ms="35349" started-at="2020-06-11T06:30:17Z" finished-at="2020-06-11T06:30:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Payfrequency_Monthly status=FAILURE method=QCStore.Payfrequency_Monthly()[pri:2, instance:tests.QCStore@6536e911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@6536e911]" name="killProcess" is-config="true" duration-ms="5009" started-at="2020-06-11T06:30:52Z" finished-at="2020-06-11T06:30:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="Payfrequency_Semi_monthly()[pri:3, instance:tests.QCStore@6536e911]" name="Payfrequency_Semi_monthly" duration-ms="1265157" started-at="2020-06-11T06:30:57Z" finished-at="2020-06-11T06:52:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Payfrequency_Semi_monthly -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@6536e911]" name="getResult" is-config="true" duration-ms="41" started-at="2020-06-11T06:52:02Z" finished-at="2020-06-11T06:52:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Payfrequency_Semi_monthly status=SUCCESS method=QCStore.Payfrequency_Semi_monthly()[pri:3, instance:tests.QCStore@6536e911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
